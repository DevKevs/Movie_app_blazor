// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Movie_app.Client.Pages.Movies
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Movie_app.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Movie_app.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\Pages\Movies\AddMovies.razor"
using Movie_app.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\Pages\Movies\AddMovies.razor"
using Movie_app.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\Pages\Movies\AddMovies.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/AddMovies")]
    public partial class AddMovies : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 298 "D:\Kevin Backup\repos\Movie_app\Movie_app\Client\Pages\Movies\AddMovies.razor"
       
    DateTime? value = DateTime.Now;
    List<Pelicula> Movies;
    List<Genero> gender;
    RadzenDataGrid<Pelicula> GridMovies;
    Pelicula Movie = new Pelicula();
    ResponseMovie response;
    private ResponseReader responseReader;

    protected override async Task OnInitializedAsync()
    {
        responseReader = await Http.GetFromJsonAsync<ResponseReader>("api/Peliculas/join");
        Movies = responseReader._peliculas;
        gender = await Http.GetFromJsonAsync<List<Genero>>("api/Generos");
    }
    void OnChange(DateTime? value, string format)
    {
        Movie.FechaSalida = value?.ToString(format);
    }
    async Task  HandleFileSelected(InputFileChangeEventArgs e)
    {
        IBrowserFile imgFile = e.File;
        var buffers = new byte[imgFile.Size];
        await imgFile.OpenReadStream().ReadAsync(buffers);
        string imageType = imgFile.ContentType;
        Movie.Imagen = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";

    }
    public async Task SendMovie()
    {
        Movie.Estado = "En casa";
        string json = JsonConvert.SerializeObject(Movie);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var responses = await Http.PostAsync("api/Peliculas", httpContent);
        response = await responses.Content.ReadFromJsonAsync<ResponseMovie>();
        if (response.ok)
        {
            await _reload();
            Movie = new Pelicula();
        }
    }
    public async Task EditMovie()
    {
        string json = JsonConvert.SerializeObject(Movie);
        StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        var responses = await Http.PutAsync($"api/Peliculas/{Movie.Id}", httpContent);
        response = await responses.Content.ReadFromJsonAsync<ResponseMovie>();
        if (response.ok)
        {
            await _reload();
            Movie = new Pelicula();
        }
    }
    public class ResponseMovie
    {
        public string Message { get; set; }
        public bool ok { get; set; }
    }
    public async Task _reload()
    {
        responseReader = await Http.GetFromJsonAsync<ResponseReader>("api/Peliculas/join");
        Movies = responseReader._peliculas;
        await GridMovies.Reload();
    }
    public void FillData(Pelicula _pelicula)
    {
        Movie = _pelicula;
    }
    public async Task DeleteRow(Pelicula _pelicula)
    {
        Movies.Remove(_pelicula);

        var responses = await Http.DeleteAsync($"api/Peliculas/{_pelicula.Id}");

        response = await responses.Content.ReadFromJsonAsync<ResponseMovie>();
        if (response.ok)
        {
            await GridMovies.Reload();
            Movie = new Pelicula();
        }
        
    }
    public class ResponseReader
     {
            public List<Pelicula> _peliculas { get; set; }
            public bool ok { get; set; }
     }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
